/*
Spyderbat API UI & Public APIs

Restful APIs for use by UI & customers.

API version: 1.0.0
Contact: apisupport@spyderbat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spyderbat_api

import (
	"encoding/json"
)

// OrgUnassignRoleInput struct for OrgUnassignRoleInput
type OrgUnassignRoleInput struct {
	// RoleUID
	RoleUid *string `json:"role_uid,omitempty"`
	// UserUID
	UserUid *string `json:"user_uid,omitempty"`
}

// NewOrgUnassignRoleInput instantiates a new OrgUnassignRoleInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgUnassignRoleInput() *OrgUnassignRoleInput {
	this := OrgUnassignRoleInput{}
	return &this
}

// NewOrgUnassignRoleInputWithDefaults instantiates a new OrgUnassignRoleInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgUnassignRoleInputWithDefaults() *OrgUnassignRoleInput {
	this := OrgUnassignRoleInput{}
	return &this
}

// GetRoleUid returns the RoleUid field value if set, zero value otherwise.
func (o *OrgUnassignRoleInput) GetRoleUid() string {
	if o == nil || o.RoleUid == nil {
		var ret string
		return ret
	}
	return *o.RoleUid
}

// GetRoleUidOk returns a tuple with the RoleUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnassignRoleInput) GetRoleUidOk() (*string, bool) {
	if o == nil || o.RoleUid == nil {
		return nil, false
	}
	return o.RoleUid, true
}

// HasRoleUid returns a boolean if a field has been set.
func (o *OrgUnassignRoleInput) HasRoleUid() bool {
	if o != nil && o.RoleUid != nil {
		return true
	}

	return false
}

// SetRoleUid gets a reference to the given string and assigns it to the RoleUid field.
func (o *OrgUnassignRoleInput) SetRoleUid(v string) {
	o.RoleUid = &v
}

// GetUserUid returns the UserUid field value if set, zero value otherwise.
func (o *OrgUnassignRoleInput) GetUserUid() string {
	if o == nil || o.UserUid == nil {
		var ret string
		return ret
	}
	return *o.UserUid
}

// GetUserUidOk returns a tuple with the UserUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnassignRoleInput) GetUserUidOk() (*string, bool) {
	if o == nil || o.UserUid == nil {
		return nil, false
	}
	return o.UserUid, true
}

// HasUserUid returns a boolean if a field has been set.
func (o *OrgUnassignRoleInput) HasUserUid() bool {
	if o != nil && o.UserUid != nil {
		return true
	}

	return false
}

// SetUserUid gets a reference to the given string and assigns it to the UserUid field.
func (o *OrgUnassignRoleInput) SetUserUid(v string) {
	o.UserUid = &v
}

func (o OrgUnassignRoleInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RoleUid != nil {
		toSerialize["role_uid"] = o.RoleUid
	}
	if o.UserUid != nil {
		toSerialize["user_uid"] = o.UserUid
	}
	return json.Marshal(toSerialize)
}

type NullableOrgUnassignRoleInput struct {
	value *OrgUnassignRoleInput
	isSet bool
}

func (v NullableOrgUnassignRoleInput) Get() *OrgUnassignRoleInput {
	return v.value
}

func (v *NullableOrgUnassignRoleInput) Set(val *OrgUnassignRoleInput) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgUnassignRoleInput) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgUnassignRoleInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgUnassignRoleInput(val *OrgUnassignRoleInput) *NullableOrgUnassignRoleInput {
	return &NullableOrgUnassignRoleInput{value: val, isSet: true}
}

func (v NullableOrgUnassignRoleInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgUnassignRoleInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


