/*
Spyderbat API UI & Public APIs

Restful APIs for use by UI & customers.

API version: 1.0.0
Contact: apisupport@spyderbat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spyderbat_api

import (
	"encoding/json"
)

// NotificationPolicy A notification policy in json or hjson
type NotificationPolicy struct {
	Routes []NotificationPolicyRoutesInner `json:"routes"`
	Targets map[string]NotificationPolicyDestination `json:"targets"`
}

// NewNotificationPolicy instantiates a new NotificationPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationPolicy(routes []NotificationPolicyRoutesInner, targets map[string]NotificationPolicyDestination) *NotificationPolicy {
	this := NotificationPolicy{}
	this.Routes = routes
	this.Targets = targets
	return &this
}

// NewNotificationPolicyWithDefaults instantiates a new NotificationPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationPolicyWithDefaults() *NotificationPolicy {
	this := NotificationPolicy{}
	return &this
}

// GetRoutes returns the Routes field value
func (o *NotificationPolicy) GetRoutes() []NotificationPolicyRoutesInner {
	if o == nil {
		var ret []NotificationPolicyRoutesInner
		return ret
	}

	return o.Routes
}

// GetRoutesOk returns a tuple with the Routes field value
// and a boolean to check if the value has been set.
func (o *NotificationPolicy) GetRoutesOk() ([]NotificationPolicyRoutesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Routes, true
}

// SetRoutes sets field value
func (o *NotificationPolicy) SetRoutes(v []NotificationPolicyRoutesInner) {
	o.Routes = v
}

// GetTargets returns the Targets field value
func (o *NotificationPolicy) GetTargets() map[string]NotificationPolicyDestination {
	if o == nil {
		var ret map[string]NotificationPolicyDestination
		return ret
	}

	return o.Targets
}

// GetTargetsOk returns a tuple with the Targets field value
// and a boolean to check if the value has been set.
func (o *NotificationPolicy) GetTargetsOk() (*map[string]NotificationPolicyDestination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Targets, true
}

// SetTargets sets field value
func (o *NotificationPolicy) SetTargets(v map[string]NotificationPolicyDestination) {
	o.Targets = v
}

func (o NotificationPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["routes"] = o.Routes
	}
	if true {
		toSerialize["targets"] = o.Targets
	}
	return json.Marshal(toSerialize)
}

type NullableNotificationPolicy struct {
	value *NotificationPolicy
	isSet bool
}

func (v NullableNotificationPolicy) Get() *NotificationPolicy {
	return v.value
}

func (v *NullableNotificationPolicy) Set(val *NotificationPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationPolicy(val *NotificationPolicy) *NullableNotificationPolicy {
	return &NullableNotificationPolicy{value: val, isSet: true}
}

func (v NullableNotificationPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


