/*
Spyderbat API UI & Public APIs

Restful APIs for use by UI & customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sbapi

import (
	"encoding/json"
)

// SrcCreateInput struct for SrcCreateInput
type SrcCreateInput struct {
	// User supplied description of the source
	Description *string `json:"description,omitempty"`
	// User supplied name of the source
	Name *string `json:"name,omitempty"`
	// Description of the runtime of the source
	RuntimeDescription *string `json:"runtime_description,omitempty"`
	RuntimeDetails *OrcApiRuntimeDetails `json:"runtime_details,omitempty"`
	// User supplied tags
	Tags []string `json:"tags,omitempty"`
	// Type of source
	Type *string `json:"type,omitempty"`
	// The UID of the source
	Uid *string `json:"uid,omitempty"`
}

// NewSrcCreateInput instantiates a new SrcCreateInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSrcCreateInput() *SrcCreateInput {
	this := SrcCreateInput{}
	return &this
}

// NewSrcCreateInputWithDefaults instantiates a new SrcCreateInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSrcCreateInputWithDefaults() *SrcCreateInput {
	this := SrcCreateInput{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SrcCreateInput) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SrcCreateInput) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SrcCreateInput) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SrcCreateInput) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SrcCreateInput) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SrcCreateInput) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SrcCreateInput) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SrcCreateInput) SetName(v string) {
	o.Name = &v
}

// GetRuntimeDescription returns the RuntimeDescription field value if set, zero value otherwise.
func (o *SrcCreateInput) GetRuntimeDescription() string {
	if o == nil || o.RuntimeDescription == nil {
		var ret string
		return ret
	}
	return *o.RuntimeDescription
}

// GetRuntimeDescriptionOk returns a tuple with the RuntimeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SrcCreateInput) GetRuntimeDescriptionOk() (*string, bool) {
	if o == nil || o.RuntimeDescription == nil {
		return nil, false
	}
	return o.RuntimeDescription, true
}

// HasRuntimeDescription returns a boolean if a field has been set.
func (o *SrcCreateInput) HasRuntimeDescription() bool {
	if o != nil && o.RuntimeDescription != nil {
		return true
	}

	return false
}

// SetRuntimeDescription gets a reference to the given string and assigns it to the RuntimeDescription field.
func (o *SrcCreateInput) SetRuntimeDescription(v string) {
	o.RuntimeDescription = &v
}

// GetRuntimeDetails returns the RuntimeDetails field value if set, zero value otherwise.
func (o *SrcCreateInput) GetRuntimeDetails() OrcApiRuntimeDetails {
	if o == nil || o.RuntimeDetails == nil {
		var ret OrcApiRuntimeDetails
		return ret
	}
	return *o.RuntimeDetails
}

// GetRuntimeDetailsOk returns a tuple with the RuntimeDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SrcCreateInput) GetRuntimeDetailsOk() (*OrcApiRuntimeDetails, bool) {
	if o == nil || o.RuntimeDetails == nil {
		return nil, false
	}
	return o.RuntimeDetails, true
}

// HasRuntimeDetails returns a boolean if a field has been set.
func (o *SrcCreateInput) HasRuntimeDetails() bool {
	if o != nil && o.RuntimeDetails != nil {
		return true
	}

	return false
}

// SetRuntimeDetails gets a reference to the given OrcApiRuntimeDetails and assigns it to the RuntimeDetails field.
func (o *SrcCreateInput) SetRuntimeDetails(v OrcApiRuntimeDetails) {
	o.RuntimeDetails = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *SrcCreateInput) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SrcCreateInput) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SrcCreateInput) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *SrcCreateInput) SetTags(v []string) {
	o.Tags = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SrcCreateInput) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SrcCreateInput) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SrcCreateInput) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SrcCreateInput) SetType(v string) {
	o.Type = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *SrcCreateInput) GetUid() string {
	if o == nil || o.Uid == nil {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SrcCreateInput) GetUidOk() (*string, bool) {
	if o == nil || o.Uid == nil {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *SrcCreateInput) HasUid() bool {
	if o != nil && o.Uid != nil {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *SrcCreateInput) SetUid(v string) {
	o.Uid = &v
}

func (o SrcCreateInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.RuntimeDescription != nil {
		toSerialize["runtime_description"] = o.RuntimeDescription
	}
	if o.RuntimeDetails != nil {
		toSerialize["runtime_details"] = o.RuntimeDetails
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Uid != nil {
		toSerialize["uid"] = o.Uid
	}
	return json.Marshal(toSerialize)
}

type NullableSrcCreateInput struct {
	value *SrcCreateInput
	isSet bool
}

func (v NullableSrcCreateInput) Get() *SrcCreateInput {
	return v.value
}

func (v *NullableSrcCreateInput) Set(val *SrcCreateInput) {
	v.value = val
	v.isSet = true
}

func (v NullableSrcCreateInput) IsSet() bool {
	return v.isSet
}

func (v *NullableSrcCreateInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSrcCreateInput(val *SrcCreateInput) *NullableSrcCreateInput {
	return &NullableSrcCreateInput{value: val, isSet: true}
}

func (v NullableSrcCreateInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSrcCreateInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


