/*
Spyderbat API UI & Public APIs

Restful APIs for use by UI & customers.

API version: 1.0.0
Contact: apisupport@spyderbat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spyderbat_api

import (
	"encoding/json"
)

// NotificationPolicyDestinationSlack struct for NotificationPolicyDestinationSlack
type NotificationPolicyDestinationSlack struct {
	Url string `json:"url"`
}

// NewNotificationPolicyDestinationSlack instantiates a new NotificationPolicyDestinationSlack object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationPolicyDestinationSlack(url string) *NotificationPolicyDestinationSlack {
	this := NotificationPolicyDestinationSlack{}
	this.Url = url
	return &this
}

// NewNotificationPolicyDestinationSlackWithDefaults instantiates a new NotificationPolicyDestinationSlack object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationPolicyDestinationSlackWithDefaults() *NotificationPolicyDestinationSlack {
	this := NotificationPolicyDestinationSlack{}
	return &this
}

// GetUrl returns the Url field value
func (o *NotificationPolicyDestinationSlack) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *NotificationPolicyDestinationSlack) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *NotificationPolicyDestinationSlack) SetUrl(v string) {
	o.Url = v
}

func (o NotificationPolicyDestinationSlack) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableNotificationPolicyDestinationSlack struct {
	value *NotificationPolicyDestinationSlack
	isSet bool
}

func (v NullableNotificationPolicyDestinationSlack) Get() *NotificationPolicyDestinationSlack {
	return v.value
}

func (v *NullableNotificationPolicyDestinationSlack) Set(val *NotificationPolicyDestinationSlack) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationPolicyDestinationSlack) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationPolicyDestinationSlack) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationPolicyDestinationSlack(val *NotificationPolicyDestinationSlack) *NullableNotificationPolicyDestinationSlack {
	return &NullableNotificationPolicyDestinationSlack{value: val, isSet: true}
}

func (v NullableNotificationPolicyDestinationSlack) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationPolicyDestinationSlack) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


