/*
Spyderbat API UI & Public APIs

Restful APIs for use by UI & customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sbapi

import (
	"encoding/json"
)

// DaoOrgRoleResponse struct for DaoOrgRoleResponse
type DaoOrgRoleResponse struct {
	// The organization name the user has the assigned role on
	OrgName *string `json:"org_name,omitempty"`
	// The organization UID the user has the assigned role on
	OrgUid *string `json:"org_uid,omitempty"`
	// The role the user is assigned
	RoleUid *string `json:"role_uid,omitempty"`
	// The email address associated with the user
	UserEmail *string `json:"user_email,omitempty"`
	// The user uid for the user
	UserUid *string `json:"user_uid,omitempty"`
}

// NewDaoOrgRoleResponse instantiates a new DaoOrgRoleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaoOrgRoleResponse() *DaoOrgRoleResponse {
	this := DaoOrgRoleResponse{}
	return &this
}

// NewDaoOrgRoleResponseWithDefaults instantiates a new DaoOrgRoleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaoOrgRoleResponseWithDefaults() *DaoOrgRoleResponse {
	this := DaoOrgRoleResponse{}
	return &this
}

// GetOrgName returns the OrgName field value if set, zero value otherwise.
func (o *DaoOrgRoleResponse) GetOrgName() string {
	if o == nil || o.OrgName == nil {
		var ret string
		return ret
	}
	return *o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaoOrgRoleResponse) GetOrgNameOk() (*string, bool) {
	if o == nil || o.OrgName == nil {
		return nil, false
	}
	return o.OrgName, true
}

// HasOrgName returns a boolean if a field has been set.
func (o *DaoOrgRoleResponse) HasOrgName() bool {
	if o != nil && o.OrgName != nil {
		return true
	}

	return false
}

// SetOrgName gets a reference to the given string and assigns it to the OrgName field.
func (o *DaoOrgRoleResponse) SetOrgName(v string) {
	o.OrgName = &v
}

// GetOrgUid returns the OrgUid field value if set, zero value otherwise.
func (o *DaoOrgRoleResponse) GetOrgUid() string {
	if o == nil || o.OrgUid == nil {
		var ret string
		return ret
	}
	return *o.OrgUid
}

// GetOrgUidOk returns a tuple with the OrgUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaoOrgRoleResponse) GetOrgUidOk() (*string, bool) {
	if o == nil || o.OrgUid == nil {
		return nil, false
	}
	return o.OrgUid, true
}

// HasOrgUid returns a boolean if a field has been set.
func (o *DaoOrgRoleResponse) HasOrgUid() bool {
	if o != nil && o.OrgUid != nil {
		return true
	}

	return false
}

// SetOrgUid gets a reference to the given string and assigns it to the OrgUid field.
func (o *DaoOrgRoleResponse) SetOrgUid(v string) {
	o.OrgUid = &v
}

// GetRoleUid returns the RoleUid field value if set, zero value otherwise.
func (o *DaoOrgRoleResponse) GetRoleUid() string {
	if o == nil || o.RoleUid == nil {
		var ret string
		return ret
	}
	return *o.RoleUid
}

// GetRoleUidOk returns a tuple with the RoleUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaoOrgRoleResponse) GetRoleUidOk() (*string, bool) {
	if o == nil || o.RoleUid == nil {
		return nil, false
	}
	return o.RoleUid, true
}

// HasRoleUid returns a boolean if a field has been set.
func (o *DaoOrgRoleResponse) HasRoleUid() bool {
	if o != nil && o.RoleUid != nil {
		return true
	}

	return false
}

// SetRoleUid gets a reference to the given string and assigns it to the RoleUid field.
func (o *DaoOrgRoleResponse) SetRoleUid(v string) {
	o.RoleUid = &v
}

// GetUserEmail returns the UserEmail field value if set, zero value otherwise.
func (o *DaoOrgRoleResponse) GetUserEmail() string {
	if o == nil || o.UserEmail == nil {
		var ret string
		return ret
	}
	return *o.UserEmail
}

// GetUserEmailOk returns a tuple with the UserEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaoOrgRoleResponse) GetUserEmailOk() (*string, bool) {
	if o == nil || o.UserEmail == nil {
		return nil, false
	}
	return o.UserEmail, true
}

// HasUserEmail returns a boolean if a field has been set.
func (o *DaoOrgRoleResponse) HasUserEmail() bool {
	if o != nil && o.UserEmail != nil {
		return true
	}

	return false
}

// SetUserEmail gets a reference to the given string and assigns it to the UserEmail field.
func (o *DaoOrgRoleResponse) SetUserEmail(v string) {
	o.UserEmail = &v
}

// GetUserUid returns the UserUid field value if set, zero value otherwise.
func (o *DaoOrgRoleResponse) GetUserUid() string {
	if o == nil || o.UserUid == nil {
		var ret string
		return ret
	}
	return *o.UserUid
}

// GetUserUidOk returns a tuple with the UserUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaoOrgRoleResponse) GetUserUidOk() (*string, bool) {
	if o == nil || o.UserUid == nil {
		return nil, false
	}
	return o.UserUid, true
}

// HasUserUid returns a boolean if a field has been set.
func (o *DaoOrgRoleResponse) HasUserUid() bool {
	if o != nil && o.UserUid != nil {
		return true
	}

	return false
}

// SetUserUid gets a reference to the given string and assigns it to the UserUid field.
func (o *DaoOrgRoleResponse) SetUserUid(v string) {
	o.UserUid = &v
}

func (o DaoOrgRoleResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OrgName != nil {
		toSerialize["org_name"] = o.OrgName
	}
	if o.OrgUid != nil {
		toSerialize["org_uid"] = o.OrgUid
	}
	if o.RoleUid != nil {
		toSerialize["role_uid"] = o.RoleUid
	}
	if o.UserEmail != nil {
		toSerialize["user_email"] = o.UserEmail
	}
	if o.UserUid != nil {
		toSerialize["user_uid"] = o.UserUid
	}
	return json.Marshal(toSerialize)
}

type NullableDaoOrgRoleResponse struct {
	value *DaoOrgRoleResponse
	isSet bool
}

func (v NullableDaoOrgRoleResponse) Get() *DaoOrgRoleResponse {
	return v.value
}

func (v *NullableDaoOrgRoleResponse) Set(val *DaoOrgRoleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDaoOrgRoleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDaoOrgRoleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaoOrgRoleResponse(val *DaoOrgRoleResponse) *NullableDaoOrgRoleResponse {
	return &NullableDaoOrgRoleResponse{value: val, isSet: true}
}

func (v NullableDaoOrgRoleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaoOrgRoleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


