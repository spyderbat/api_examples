/*
Spyderbat API UI & Public APIs

Restful APIs for use by UI & customers.

API version: 1.0.0
Contact: apisupport@spyderbat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spyderbat_api

import (
	"encoding/json"
	"time"
)

// ApiKeyCreateInput struct for ApiKeyCreateInput
type ApiKeyCreateInput struct {
	// Description of the API key
	Description *string `json:"description,omitempty"`
	// When the key should expire, in a RFC3339 formated string
	ValidTo time.Time `json:"valid_to"`
}

// NewApiKeyCreateInput instantiates a new ApiKeyCreateInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKeyCreateInput(validTo time.Time) *ApiKeyCreateInput {
	this := ApiKeyCreateInput{}
	this.ValidTo = validTo
	return &this
}

// NewApiKeyCreateInputWithDefaults instantiates a new ApiKeyCreateInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKeyCreateInputWithDefaults() *ApiKeyCreateInput {
	this := ApiKeyCreateInput{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiKeyCreateInput) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyCreateInput) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiKeyCreateInput) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiKeyCreateInput) SetDescription(v string) {
	o.Description = &v
}

// GetValidTo returns the ValidTo field value
func (o *ApiKeyCreateInput) GetValidTo() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ValidTo
}

// GetValidToOk returns a tuple with the ValidTo field value
// and a boolean to check if the value has been set.
func (o *ApiKeyCreateInput) GetValidToOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidTo, true
}

// SetValidTo sets field value
func (o *ApiKeyCreateInput) SetValidTo(v time.Time) {
	o.ValidTo = v
}

func (o ApiKeyCreateInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["valid_to"] = o.ValidTo
	}
	return json.Marshal(toSerialize)
}

type NullableApiKeyCreateInput struct {
	value *ApiKeyCreateInput
	isSet bool
}

func (v NullableApiKeyCreateInput) Get() *ApiKeyCreateInput {
	return v.value
}

func (v *NullableApiKeyCreateInput) Set(val *ApiKeyCreateInput) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKeyCreateInput) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKeyCreateInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKeyCreateInput(val *ApiKeyCreateInput) *NullableApiKeyCreateInput {
	return &NullableApiKeyCreateInput{value: val, isSet: true}
}

func (v NullableApiKeyCreateInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKeyCreateInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


