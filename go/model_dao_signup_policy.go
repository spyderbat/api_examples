/*
Spyderbat API UI & Public APIs

Restful APIs for use by UI & customers.

API version: 1.0.0
Contact: apisupport@spyderbat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spyderbat_api

import (
	"encoding/json"
)

// DaoSignupPolicy Signup policy
type DaoSignupPolicy struct {
	// Create a personal org for the user
	CreatePersonalOrg *bool `json:"create_personal_org,omitempty"`
	// Default org roles for new orgs
	DefaultOrgRoles []DaoOrgRoles `json:"default_org_roles,omitempty"`
	// Require admin approval for new orgs
	RequiresApproval *bool `json:"requires_approval,omitempty"`
}

// NewDaoSignupPolicy instantiates a new DaoSignupPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaoSignupPolicy() *DaoSignupPolicy {
	this := DaoSignupPolicy{}
	return &this
}

// NewDaoSignupPolicyWithDefaults instantiates a new DaoSignupPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaoSignupPolicyWithDefaults() *DaoSignupPolicy {
	this := DaoSignupPolicy{}
	return &this
}

// GetCreatePersonalOrg returns the CreatePersonalOrg field value if set, zero value otherwise.
func (o *DaoSignupPolicy) GetCreatePersonalOrg() bool {
	if o == nil || o.CreatePersonalOrg == nil {
		var ret bool
		return ret
	}
	return *o.CreatePersonalOrg
}

// GetCreatePersonalOrgOk returns a tuple with the CreatePersonalOrg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaoSignupPolicy) GetCreatePersonalOrgOk() (*bool, bool) {
	if o == nil || o.CreatePersonalOrg == nil {
		return nil, false
	}
	return o.CreatePersonalOrg, true
}

// HasCreatePersonalOrg returns a boolean if a field has been set.
func (o *DaoSignupPolicy) HasCreatePersonalOrg() bool {
	if o != nil && o.CreatePersonalOrg != nil {
		return true
	}

	return false
}

// SetCreatePersonalOrg gets a reference to the given bool and assigns it to the CreatePersonalOrg field.
func (o *DaoSignupPolicy) SetCreatePersonalOrg(v bool) {
	o.CreatePersonalOrg = &v
}

// GetDefaultOrgRoles returns the DefaultOrgRoles field value if set, zero value otherwise.
func (o *DaoSignupPolicy) GetDefaultOrgRoles() []DaoOrgRoles {
	if o == nil || o.DefaultOrgRoles == nil {
		var ret []DaoOrgRoles
		return ret
	}
	return o.DefaultOrgRoles
}

// GetDefaultOrgRolesOk returns a tuple with the DefaultOrgRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaoSignupPolicy) GetDefaultOrgRolesOk() ([]DaoOrgRoles, bool) {
	if o == nil || o.DefaultOrgRoles == nil {
		return nil, false
	}
	return o.DefaultOrgRoles, true
}

// HasDefaultOrgRoles returns a boolean if a field has been set.
func (o *DaoSignupPolicy) HasDefaultOrgRoles() bool {
	if o != nil && o.DefaultOrgRoles != nil {
		return true
	}

	return false
}

// SetDefaultOrgRoles gets a reference to the given []DaoOrgRoles and assigns it to the DefaultOrgRoles field.
func (o *DaoSignupPolicy) SetDefaultOrgRoles(v []DaoOrgRoles) {
	o.DefaultOrgRoles = v
}

// GetRequiresApproval returns the RequiresApproval field value if set, zero value otherwise.
func (o *DaoSignupPolicy) GetRequiresApproval() bool {
	if o == nil || o.RequiresApproval == nil {
		var ret bool
		return ret
	}
	return *o.RequiresApproval
}

// GetRequiresApprovalOk returns a tuple with the RequiresApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaoSignupPolicy) GetRequiresApprovalOk() (*bool, bool) {
	if o == nil || o.RequiresApproval == nil {
		return nil, false
	}
	return o.RequiresApproval, true
}

// HasRequiresApproval returns a boolean if a field has been set.
func (o *DaoSignupPolicy) HasRequiresApproval() bool {
	if o != nil && o.RequiresApproval != nil {
		return true
	}

	return false
}

// SetRequiresApproval gets a reference to the given bool and assigns it to the RequiresApproval field.
func (o *DaoSignupPolicy) SetRequiresApproval(v bool) {
	o.RequiresApproval = &v
}

func (o DaoSignupPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatePersonalOrg != nil {
		toSerialize["create_personal_org"] = o.CreatePersonalOrg
	}
	if o.DefaultOrgRoles != nil {
		toSerialize["default_org_roles"] = o.DefaultOrgRoles
	}
	if o.RequiresApproval != nil {
		toSerialize["requires_approval"] = o.RequiresApproval
	}
	return json.Marshal(toSerialize)
}

type NullableDaoSignupPolicy struct {
	value *DaoSignupPolicy
	isSet bool
}

func (v NullableDaoSignupPolicy) Get() *DaoSignupPolicy {
	return v.value
}

func (v *NullableDaoSignupPolicy) Set(val *DaoSignupPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableDaoSignupPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableDaoSignupPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaoSignupPolicy(val *DaoSignupPolicy) *NullableDaoSignupPolicy {
	return &NullableDaoSignupPolicy{value: val, isSet: true}
}

func (v NullableDaoSignupPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaoSignupPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


