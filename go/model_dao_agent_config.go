/*
Spyderbat API UI & Public APIs

Restful APIs for use by UI & customers.

API version: 1.0.0
Contact: apisupport@spyderbat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spyderbat_api

import (
	"encoding/json"
)

// DaoAgentConfig Initial configuration to use when creating an agent
type DaoAgentConfig struct {
	// Agent classes
	Classes []DaoAgentClass `json:"classes"`
	// Description of the agent config
	Description *string `json:"description,omitempty"`
	// Name of the agent config
	Name *string `json:"name,omitempty"`
	// Tags to be applied to a source upon agent registration
	SourceTags []string `json:"source_tags,omitempty"`
	// Type of agent config
	Type *string `json:"type,omitempty"`
}

// NewDaoAgentConfig instantiates a new DaoAgentConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaoAgentConfig(classes []DaoAgentClass) *DaoAgentConfig {
	this := DaoAgentConfig{}
	this.Classes = classes
	return &this
}

// NewDaoAgentConfigWithDefaults instantiates a new DaoAgentConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaoAgentConfigWithDefaults() *DaoAgentConfig {
	this := DaoAgentConfig{}
	return &this
}

// GetClasses returns the Classes field value
func (o *DaoAgentConfig) GetClasses() []DaoAgentClass {
	if o == nil {
		var ret []DaoAgentClass
		return ret
	}

	return o.Classes
}

// GetClassesOk returns a tuple with the Classes field value
// and a boolean to check if the value has been set.
func (o *DaoAgentConfig) GetClassesOk() ([]DaoAgentClass, bool) {
	if o == nil {
		return nil, false
	}
	return o.Classes, true
}

// SetClasses sets field value
func (o *DaoAgentConfig) SetClasses(v []DaoAgentClass) {
	o.Classes = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DaoAgentConfig) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaoAgentConfig) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DaoAgentConfig) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DaoAgentConfig) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DaoAgentConfig) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaoAgentConfig) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DaoAgentConfig) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DaoAgentConfig) SetName(v string) {
	o.Name = &v
}

// GetSourceTags returns the SourceTags field value if set, zero value otherwise.
func (o *DaoAgentConfig) GetSourceTags() []string {
	if o == nil || o.SourceTags == nil {
		var ret []string
		return ret
	}
	return o.SourceTags
}

// GetSourceTagsOk returns a tuple with the SourceTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaoAgentConfig) GetSourceTagsOk() ([]string, bool) {
	if o == nil || o.SourceTags == nil {
		return nil, false
	}
	return o.SourceTags, true
}

// HasSourceTags returns a boolean if a field has been set.
func (o *DaoAgentConfig) HasSourceTags() bool {
	if o != nil && o.SourceTags != nil {
		return true
	}

	return false
}

// SetSourceTags gets a reference to the given []string and assigns it to the SourceTags field.
func (o *DaoAgentConfig) SetSourceTags(v []string) {
	o.SourceTags = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DaoAgentConfig) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaoAgentConfig) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DaoAgentConfig) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DaoAgentConfig) SetType(v string) {
	o.Type = &v
}

func (o DaoAgentConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["classes"] = o.Classes
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.SourceTags != nil {
		toSerialize["source_tags"] = o.SourceTags
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableDaoAgentConfig struct {
	value *DaoAgentConfig
	isSet bool
}

func (v NullableDaoAgentConfig) Get() *DaoAgentConfig {
	return v.value
}

func (v *NullableDaoAgentConfig) Set(val *DaoAgentConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableDaoAgentConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableDaoAgentConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaoAgentConfig(val *DaoAgentConfig) *NullableDaoAgentConfig {
	return &NullableDaoAgentConfig{value: val, isSet: true}
}

func (v NullableDaoAgentConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaoAgentConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


