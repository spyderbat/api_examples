/*
Spyderbat API UI & Public APIs

Restful APIs for use by UI & customers.

API version: 1.0.0
Contact: apisupport@spyderbat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spyderbat_api

import (
	"encoding/json"
)

// NotificationPolicyRoutesInner struct for NotificationPolicyRoutesInner
type NotificationPolicyRoutesInner struct {
	// UI-supplied data
	Data interface{} `json:"data,omitempty"`
	Description *string `json:"description,omitempty"`
	Destination *NotificationPolicyDestination `json:"destination,omitempty"`
	Expr *Expr `json:"expr,omitempty"`
	// One of the targets specified in `targets`
	Target *string `json:"target,omitempty"`
}

// NewNotificationPolicyRoutesInner instantiates a new NotificationPolicyRoutesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationPolicyRoutesInner() *NotificationPolicyRoutesInner {
	this := NotificationPolicyRoutesInner{}
	return &this
}

// NewNotificationPolicyRoutesInnerWithDefaults instantiates a new NotificationPolicyRoutesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationPolicyRoutesInnerWithDefaults() *NotificationPolicyRoutesInner {
	this := NotificationPolicyRoutesInner{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NotificationPolicyRoutesInner) GetData() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationPolicyRoutesInner) GetDataOk() (*interface{}, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return &o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *NotificationPolicyRoutesInner) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given interface{} and assigns it to the Data field.
func (o *NotificationPolicyRoutesInner) SetData(v interface{}) {
	o.Data = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *NotificationPolicyRoutesInner) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationPolicyRoutesInner) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *NotificationPolicyRoutesInner) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *NotificationPolicyRoutesInner) SetDescription(v string) {
	o.Description = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *NotificationPolicyRoutesInner) GetDestination() NotificationPolicyDestination {
	if o == nil || o.Destination == nil {
		var ret NotificationPolicyDestination
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationPolicyRoutesInner) GetDestinationOk() (*NotificationPolicyDestination, bool) {
	if o == nil || o.Destination == nil {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *NotificationPolicyRoutesInner) HasDestination() bool {
	if o != nil && o.Destination != nil {
		return true
	}

	return false
}

// SetDestination gets a reference to the given NotificationPolicyDestination and assigns it to the Destination field.
func (o *NotificationPolicyRoutesInner) SetDestination(v NotificationPolicyDestination) {
	o.Destination = &v
}

// GetExpr returns the Expr field value if set, zero value otherwise.
func (o *NotificationPolicyRoutesInner) GetExpr() Expr {
	if o == nil || o.Expr == nil {
		var ret Expr
		return ret
	}
	return *o.Expr
}

// GetExprOk returns a tuple with the Expr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationPolicyRoutesInner) GetExprOk() (*Expr, bool) {
	if o == nil || o.Expr == nil {
		return nil, false
	}
	return o.Expr, true
}

// HasExpr returns a boolean if a field has been set.
func (o *NotificationPolicyRoutesInner) HasExpr() bool {
	if o != nil && o.Expr != nil {
		return true
	}

	return false
}

// SetExpr gets a reference to the given Expr and assigns it to the Expr field.
func (o *NotificationPolicyRoutesInner) SetExpr(v Expr) {
	o.Expr = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *NotificationPolicyRoutesInner) GetTarget() string {
	if o == nil || o.Target == nil {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationPolicyRoutesInner) GetTargetOk() (*string, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *NotificationPolicyRoutesInner) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *NotificationPolicyRoutesInner) SetTarget(v string) {
	o.Target = &v
}

func (o NotificationPolicyRoutesInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Destination != nil {
		toSerialize["destination"] = o.Destination
	}
	if o.Expr != nil {
		toSerialize["expr"] = o.Expr
	}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	return json.Marshal(toSerialize)
}

type NullableNotificationPolicyRoutesInner struct {
	value *NotificationPolicyRoutesInner
	isSet bool
}

func (v NullableNotificationPolicyRoutesInner) Get() *NotificationPolicyRoutesInner {
	return v.value
}

func (v *NullableNotificationPolicyRoutesInner) Set(val *NotificationPolicyRoutesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationPolicyRoutesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationPolicyRoutesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationPolicyRoutesInner(val *NotificationPolicyRoutesInner) *NullableNotificationPolicyRoutesInner {
	return &NullableNotificationPolicyRoutesInner{value: val, isSet: true}
}

func (v NullableNotificationPolicyRoutesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationPolicyRoutesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


