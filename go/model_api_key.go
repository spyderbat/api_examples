/*
Spyderbat API UI & Public APIs

Restful APIs for use by UI & customers.

API version: 1.0.0
Contact: apisupport@spyderbat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spyderbat_api

import (
	"encoding/json"
	"time"
)

// APIKey struct for APIKey
type APIKey struct {
	// User supplied description of the API key
	Description *string `json:"description,omitempty"`
	// Enables or disables the API key
	Enabled *bool `json:"enabled,omitempty"`
	// JWT to use for authentication
	Jwt *string `json:"jwt,omitempty"`
	// The time of las use of the key; only updated every 5 minutes
	LastUsed *time.Time `json:"last_used,omitempty"`
	// Owner UID
	OwnerUid *string `json:"owner_uid,omitempty"`
	// APIKey UID
	Uid *string `json:"uid,omitempty"`
	// Valid from is the creation date or first date when the API key became valid
	ValidFrom *time.Time `json:"valid_from,omitempty"`
	// Valid to is the expiration date or the last date this API key will be valid
	ValidTo *time.Time `json:"valid_to,omitempty"`
}

// NewAPIKey instantiates a new APIKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIKey() *APIKey {
	this := APIKey{}
	return &this
}

// NewAPIKeyWithDefaults instantiates a new APIKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIKeyWithDefaults() *APIKey {
	this := APIKey{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *APIKey) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKey) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *APIKey) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *APIKey) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *APIKey) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKey) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *APIKey) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *APIKey) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetJwt returns the Jwt field value if set, zero value otherwise.
func (o *APIKey) GetJwt() string {
	if o == nil || o.Jwt == nil {
		var ret string
		return ret
	}
	return *o.Jwt
}

// GetJwtOk returns a tuple with the Jwt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKey) GetJwtOk() (*string, bool) {
	if o == nil || o.Jwt == nil {
		return nil, false
	}
	return o.Jwt, true
}

// HasJwt returns a boolean if a field has been set.
func (o *APIKey) HasJwt() bool {
	if o != nil && o.Jwt != nil {
		return true
	}

	return false
}

// SetJwt gets a reference to the given string and assigns it to the Jwt field.
func (o *APIKey) SetJwt(v string) {
	o.Jwt = &v
}

// GetLastUsed returns the LastUsed field value if set, zero value otherwise.
func (o *APIKey) GetLastUsed() time.Time {
	if o == nil || o.LastUsed == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUsed
}

// GetLastUsedOk returns a tuple with the LastUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKey) GetLastUsedOk() (*time.Time, bool) {
	if o == nil || o.LastUsed == nil {
		return nil, false
	}
	return o.LastUsed, true
}

// HasLastUsed returns a boolean if a field has been set.
func (o *APIKey) HasLastUsed() bool {
	if o != nil && o.LastUsed != nil {
		return true
	}

	return false
}

// SetLastUsed gets a reference to the given time.Time and assigns it to the LastUsed field.
func (o *APIKey) SetLastUsed(v time.Time) {
	o.LastUsed = &v
}

// GetOwnerUid returns the OwnerUid field value if set, zero value otherwise.
func (o *APIKey) GetOwnerUid() string {
	if o == nil || o.OwnerUid == nil {
		var ret string
		return ret
	}
	return *o.OwnerUid
}

// GetOwnerUidOk returns a tuple with the OwnerUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKey) GetOwnerUidOk() (*string, bool) {
	if o == nil || o.OwnerUid == nil {
		return nil, false
	}
	return o.OwnerUid, true
}

// HasOwnerUid returns a boolean if a field has been set.
func (o *APIKey) HasOwnerUid() bool {
	if o != nil && o.OwnerUid != nil {
		return true
	}

	return false
}

// SetOwnerUid gets a reference to the given string and assigns it to the OwnerUid field.
func (o *APIKey) SetOwnerUid(v string) {
	o.OwnerUid = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *APIKey) GetUid() string {
	if o == nil || o.Uid == nil {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKey) GetUidOk() (*string, bool) {
	if o == nil || o.Uid == nil {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *APIKey) HasUid() bool {
	if o != nil && o.Uid != nil {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *APIKey) SetUid(v string) {
	o.Uid = &v
}

// GetValidFrom returns the ValidFrom field value if set, zero value otherwise.
func (o *APIKey) GetValidFrom() time.Time {
	if o == nil || o.ValidFrom == nil {
		var ret time.Time
		return ret
	}
	return *o.ValidFrom
}

// GetValidFromOk returns a tuple with the ValidFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKey) GetValidFromOk() (*time.Time, bool) {
	if o == nil || o.ValidFrom == nil {
		return nil, false
	}
	return o.ValidFrom, true
}

// HasValidFrom returns a boolean if a field has been set.
func (o *APIKey) HasValidFrom() bool {
	if o != nil && o.ValidFrom != nil {
		return true
	}

	return false
}

// SetValidFrom gets a reference to the given time.Time and assigns it to the ValidFrom field.
func (o *APIKey) SetValidFrom(v time.Time) {
	o.ValidFrom = &v
}

// GetValidTo returns the ValidTo field value if set, zero value otherwise.
func (o *APIKey) GetValidTo() time.Time {
	if o == nil || o.ValidTo == nil {
		var ret time.Time
		return ret
	}
	return *o.ValidTo
}

// GetValidToOk returns a tuple with the ValidTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKey) GetValidToOk() (*time.Time, bool) {
	if o == nil || o.ValidTo == nil {
		return nil, false
	}
	return o.ValidTo, true
}

// HasValidTo returns a boolean if a field has been set.
func (o *APIKey) HasValidTo() bool {
	if o != nil && o.ValidTo != nil {
		return true
	}

	return false
}

// SetValidTo gets a reference to the given time.Time and assigns it to the ValidTo field.
func (o *APIKey) SetValidTo(v time.Time) {
	o.ValidTo = &v
}

func (o APIKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Jwt != nil {
		toSerialize["jwt"] = o.Jwt
	}
	if o.LastUsed != nil {
		toSerialize["last_used"] = o.LastUsed
	}
	if o.OwnerUid != nil {
		toSerialize["owner_uid"] = o.OwnerUid
	}
	if o.Uid != nil {
		toSerialize["uid"] = o.Uid
	}
	if o.ValidFrom != nil {
		toSerialize["valid_from"] = o.ValidFrom
	}
	if o.ValidTo != nil {
		toSerialize["valid_to"] = o.ValidTo
	}
	return json.Marshal(toSerialize)
}

type NullableAPIKey struct {
	value *APIKey
	isSet bool
}

func (v NullableAPIKey) Get() *APIKey {
	return v.value
}

func (v *NullableAPIKey) Set(val *APIKey) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIKey) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIKey(val *APIKey) *NullableAPIKey {
	return &NullableAPIKey{value: val, isSet: true}
}

func (v NullableAPIKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


