/*
Spyderbat API UI & Public APIs

Restful APIs for use by UI & customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sbapi

import (
	"encoding/json"
)

// ApiSOARListHandlerOutput struct for ApiSOARListHandlerOutput
type ApiSOARListHandlerOutput struct {
	InvestigateSourceUrl *string `json:"investigate_source_url,omitempty"`
	Source *Source `json:"source,omitempty"`
}

// NewApiSOARListHandlerOutput instantiates a new ApiSOARListHandlerOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiSOARListHandlerOutput() *ApiSOARListHandlerOutput {
	this := ApiSOARListHandlerOutput{}
	return &this
}

// NewApiSOARListHandlerOutputWithDefaults instantiates a new ApiSOARListHandlerOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiSOARListHandlerOutputWithDefaults() *ApiSOARListHandlerOutput {
	this := ApiSOARListHandlerOutput{}
	return &this
}

// GetInvestigateSourceUrl returns the InvestigateSourceUrl field value if set, zero value otherwise.
func (o *ApiSOARListHandlerOutput) GetInvestigateSourceUrl() string {
	if o == nil || o.InvestigateSourceUrl == nil {
		var ret string
		return ret
	}
	return *o.InvestigateSourceUrl
}

// GetInvestigateSourceUrlOk returns a tuple with the InvestigateSourceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSOARListHandlerOutput) GetInvestigateSourceUrlOk() (*string, bool) {
	if o == nil || o.InvestigateSourceUrl == nil {
		return nil, false
	}
	return o.InvestigateSourceUrl, true
}

// HasInvestigateSourceUrl returns a boolean if a field has been set.
func (o *ApiSOARListHandlerOutput) HasInvestigateSourceUrl() bool {
	if o != nil && o.InvestigateSourceUrl != nil {
		return true
	}

	return false
}

// SetInvestigateSourceUrl gets a reference to the given string and assigns it to the InvestigateSourceUrl field.
func (o *ApiSOARListHandlerOutput) SetInvestigateSourceUrl(v string) {
	o.InvestigateSourceUrl = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ApiSOARListHandlerOutput) GetSource() Source {
	if o == nil || o.Source == nil {
		var ret Source
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSOARListHandlerOutput) GetSourceOk() (*Source, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *ApiSOARListHandlerOutput) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given Source and assigns it to the Source field.
func (o *ApiSOARListHandlerOutput) SetSource(v Source) {
	o.Source = &v
}

func (o ApiSOARListHandlerOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InvestigateSourceUrl != nil {
		toSerialize["investigate_source_url"] = o.InvestigateSourceUrl
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	return json.Marshal(toSerialize)
}

type NullableApiSOARListHandlerOutput struct {
	value *ApiSOARListHandlerOutput
	isSet bool
}

func (v NullableApiSOARListHandlerOutput) Get() *ApiSOARListHandlerOutput {
	return v.value
}

func (v *NullableApiSOARListHandlerOutput) Set(val *ApiSOARListHandlerOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableApiSOARListHandlerOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableApiSOARListHandlerOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiSOARListHandlerOutput(val *ApiSOARListHandlerOutput) *NullableApiSOARListHandlerOutput {
	return &NullableApiSOARListHandlerOutput{value: val, isSet: true}
}

func (v NullableApiSOARListHandlerOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiSOARListHandlerOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


