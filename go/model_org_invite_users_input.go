/*
Spyderbat API UI & Public APIs

Restful APIs for use by UI & customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sbapi

import (
	"encoding/json"
)

// OrgInviteUsersInput struct for OrgInviteUsersInput
type OrgInviteUsersInput struct {
	Emails []string `json:"emails,omitempty"`
	Roles []string `json:"roles,omitempty"`
}

// NewOrgInviteUsersInput instantiates a new OrgInviteUsersInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgInviteUsersInput() *OrgInviteUsersInput {
	this := OrgInviteUsersInput{}
	return &this
}

// NewOrgInviteUsersInputWithDefaults instantiates a new OrgInviteUsersInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgInviteUsersInputWithDefaults() *OrgInviteUsersInput {
	this := OrgInviteUsersInput{}
	return &this
}

// GetEmails returns the Emails field value if set, zero value otherwise.
func (o *OrgInviteUsersInput) GetEmails() []string {
	if o == nil || o.Emails == nil {
		var ret []string
		return ret
	}
	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgInviteUsersInput) GetEmailsOk() ([]string, bool) {
	if o == nil || o.Emails == nil {
		return nil, false
	}
	return o.Emails, true
}

// HasEmails returns a boolean if a field has been set.
func (o *OrgInviteUsersInput) HasEmails() bool {
	if o != nil && o.Emails != nil {
		return true
	}

	return false
}

// SetEmails gets a reference to the given []string and assigns it to the Emails field.
func (o *OrgInviteUsersInput) SetEmails(v []string) {
	o.Emails = v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *OrgInviteUsersInput) GetRoles() []string {
	if o == nil || o.Roles == nil {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgInviteUsersInput) GetRolesOk() ([]string, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *OrgInviteUsersInput) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *OrgInviteUsersInput) SetRoles(v []string) {
	o.Roles = v
}

func (o OrgInviteUsersInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Emails != nil {
		toSerialize["emails"] = o.Emails
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	return json.Marshal(toSerialize)
}

type NullableOrgInviteUsersInput struct {
	value *OrgInviteUsersInput
	isSet bool
}

func (v NullableOrgInviteUsersInput) Get() *OrgInviteUsersInput {
	return v.value
}

func (v *NullableOrgInviteUsersInput) Set(val *OrgInviteUsersInput) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgInviteUsersInput) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgInviteUsersInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgInviteUsersInput(val *OrgInviteUsersInput) *NullableOrgInviteUsersInput {
	return &NullableOrgInviteUsersInput{value: val, isSet: true}
}

func (v NullableOrgInviteUsersInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgInviteUsersInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


