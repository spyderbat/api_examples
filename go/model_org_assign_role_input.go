/*
Spyderbat API UI & Public APIs

Restful APIs for use by UI & customers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sbapi

import (
	"encoding/json"
)

// OrgAssignRoleInput struct for OrgAssignRoleInput
type OrgAssignRoleInput struct {
	// RoleUID
	RoleUid *string `json:"role_uid,omitempty"`
	// UserUID
	UserUid *string `json:"user_uid,omitempty"`
}

// NewOrgAssignRoleInput instantiates a new OrgAssignRoleInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgAssignRoleInput() *OrgAssignRoleInput {
	this := OrgAssignRoleInput{}
	return &this
}

// NewOrgAssignRoleInputWithDefaults instantiates a new OrgAssignRoleInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgAssignRoleInputWithDefaults() *OrgAssignRoleInput {
	this := OrgAssignRoleInput{}
	return &this
}

// GetRoleUid returns the RoleUid field value if set, zero value otherwise.
func (o *OrgAssignRoleInput) GetRoleUid() string {
	if o == nil || o.RoleUid == nil {
		var ret string
		return ret
	}
	return *o.RoleUid
}

// GetRoleUidOk returns a tuple with the RoleUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgAssignRoleInput) GetRoleUidOk() (*string, bool) {
	if o == nil || o.RoleUid == nil {
		return nil, false
	}
	return o.RoleUid, true
}

// HasRoleUid returns a boolean if a field has been set.
func (o *OrgAssignRoleInput) HasRoleUid() bool {
	if o != nil && o.RoleUid != nil {
		return true
	}

	return false
}

// SetRoleUid gets a reference to the given string and assigns it to the RoleUid field.
func (o *OrgAssignRoleInput) SetRoleUid(v string) {
	o.RoleUid = &v
}

// GetUserUid returns the UserUid field value if set, zero value otherwise.
func (o *OrgAssignRoleInput) GetUserUid() string {
	if o == nil || o.UserUid == nil {
		var ret string
		return ret
	}
	return *o.UserUid
}

// GetUserUidOk returns a tuple with the UserUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgAssignRoleInput) GetUserUidOk() (*string, bool) {
	if o == nil || o.UserUid == nil {
		return nil, false
	}
	return o.UserUid, true
}

// HasUserUid returns a boolean if a field has been set.
func (o *OrgAssignRoleInput) HasUserUid() bool {
	if o != nil && o.UserUid != nil {
		return true
	}

	return false
}

// SetUserUid gets a reference to the given string and assigns it to the UserUid field.
func (o *OrgAssignRoleInput) SetUserUid(v string) {
	o.UserUid = &v
}

func (o OrgAssignRoleInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RoleUid != nil {
		toSerialize["role_uid"] = o.RoleUid
	}
	if o.UserUid != nil {
		toSerialize["user_uid"] = o.UserUid
	}
	return json.Marshal(toSerialize)
}

type NullableOrgAssignRoleInput struct {
	value *OrgAssignRoleInput
	isSet bool
}

func (v NullableOrgAssignRoleInput) Get() *OrgAssignRoleInput {
	return v.value
}

func (v *NullableOrgAssignRoleInput) Set(val *OrgAssignRoleInput) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgAssignRoleInput) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgAssignRoleInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgAssignRoleInput(val *OrgAssignRoleInput) *NullableOrgAssignRoleInput {
	return &NullableOrgAssignRoleInput{value: val, isSet: true}
}

func (v NullableOrgAssignRoleInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgAssignRoleInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


