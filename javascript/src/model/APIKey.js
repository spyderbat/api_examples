/**
 * Spyderbat API UI & Public APIs
 * Restful APIs for use by UI & customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@spyderbat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The APIKey model module.
 * @module model/APIKey
 * @version 0.1.0
 */
class APIKey {
    /**
     * Constructs a new <code>APIKey</code>.
     * @alias module:model/APIKey
     */
    constructor() { 
        
        APIKey.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>APIKey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APIKey} obj Optional instance to populate.
     * @return {module:model/APIKey} The populated <code>APIKey</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APIKey();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('jwt')) {
                obj['jwt'] = ApiClient.convertToType(data['jwt'], 'String');
            }
            if (data.hasOwnProperty('last_used')) {
                obj['last_used'] = ApiClient.convertToType(data['last_used'], 'Date');
            }
            if (data.hasOwnProperty('owner_uid')) {
                obj['owner_uid'] = ApiClient.convertToType(data['owner_uid'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('valid_from')) {
                obj['valid_from'] = ApiClient.convertToType(data['valid_from'], 'Date');
            }
            if (data.hasOwnProperty('valid_to')) {
                obj['valid_to'] = ApiClient.convertToType(data['valid_to'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * User supplied description of the API key
 * @member {String} description
 */
APIKey.prototype['description'] = undefined;

/**
 * Enables or disables the API key
 * @member {Boolean} enabled
 */
APIKey.prototype['enabled'] = undefined;

/**
 * JWT to use for authentication
 * @member {String} jwt
 */
APIKey.prototype['jwt'] = undefined;

/**
 * The time of las use of the key; only updated every 5 minutes
 * @member {Date} last_used
 */
APIKey.prototype['last_used'] = undefined;

/**
 * Owner UID
 * @member {String} owner_uid
 */
APIKey.prototype['owner_uid'] = undefined;

/**
 * APIKey UID
 * @member {String} uid
 */
APIKey.prototype['uid'] = undefined;

/**
 * Valid from is the creation date or first date when the API key became valid
 * @member {Date} valid_from
 */
APIKey.prototype['valid_from'] = undefined;

/**
 * Valid to is the expiration date or the last date this API key will be valid
 * @member {Date} valid_to
 */
APIKey.prototype['valid_to'] = undefined;






export default APIKey;

