/**
 * Spyderbat API UI & Public APIs
 * Restful APIs for use by UI & customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrcApiBatWork model module.
 * @module model/OrcApiBatWork
 * @version 1.0.0
 */
class OrcApiBatWork {
    /**
     * Constructs a new <code>OrcApiBatWork</code>.
     * @alias module:model/OrcApiBatWork
     */
    constructor() { 
        
        OrcApiBatWork.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrcApiBatWork</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrcApiBatWork} obj Optional instance to populate.
     * @return {module:model/OrcApiBatWork} The populated <code>OrcApiBatWork</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrcApiBatWork();

            if (data.hasOwnProperty('arguments')) {
                obj['arguments'] = ApiClient.convertToType(data['arguments'], ['String']);
            }
            if (data.hasOwnProperty('bat_uid')) {
                obj['bat_uid'] = ApiClient.convertToType(data['bat_uid'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], {'String': Object});
            }
            if (data.hasOwnProperty('start_order')) {
                obj['start_order'] = ApiClient.convertToType(data['start_order'], 'Number');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], {'String': Object});
            }
        }
        return obj;
    }


}

/**
 * arguments to pass to the commandline
 * @member {Array.<String>} arguments
 */
OrcApiBatWork.prototype['arguments'] = undefined;

/**
 * ID of this specific type of bat, specified by Spyderbat
 * @member {String} bat_uid
 */
OrcApiBatWork.prototype['bat_uid'] = undefined;

/**
 * Execute this bat or not?
 * @member {Boolean} enabled
 */
OrcApiBatWork.prototype['enabled'] = undefined;

/**
 * input parameters to the bat
 * @member {Object.<String, Object>} parameters
 */
OrcApiBatWork.prototype['parameters'] = undefined;

/**
 * Order in which to start this bat
 * @member {Number} start_order
 */
OrcApiBatWork.prototype['start_order'] = undefined;

/**
 * uid of the specific bat work for a specific agent
 * @member {String} uid
 */
OrcApiBatWork.prototype['uid'] = undefined;

/**
 * Newest version of the bat from the repository
 * @member {Object.<String, Object>} version
 */
OrcApiBatWork.prototype['version'] = undefined;






export default OrcApiBatWork;

