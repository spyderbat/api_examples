/**
 * Spyderbat API UI & Public APIs
 * Restful APIs for use by UI & customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@spyderbat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DaoSignupPolicy from './DaoSignupPolicy';

/**
 * The DaoPolicy model module.
 * @module model/DaoPolicy
 * @version 1.0.0
 */
class DaoPolicy {
    /**
     * Constructs a new <code>DaoPolicy</code>.
     * @alias module:model/DaoPolicy
     * @param allowedProviders {Array.<String>} Allowed providers (use direct for direct sign-in)
     * @param emailRegex {String} Regular expression for email addresses
     * @param signupPolicy {module:model/DaoSignupPolicy} 
     */
    constructor(allowedProviders, emailRegex, signupPolicy) { 
        
        DaoPolicy.initialize(this, allowedProviders, emailRegex, signupPolicy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, allowedProviders, emailRegex, signupPolicy) { 
        obj['allowed_providers'] = allowedProviders;
        obj['email_regex'] = emailRegex;
        obj['signup_policy'] = signupPolicy;
    }

    /**
     * Constructs a <code>DaoPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DaoPolicy} obj Optional instance to populate.
     * @return {module:model/DaoPolicy} The populated <code>DaoPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DaoPolicy();

            if (data.hasOwnProperty('allowed_providers')) {
                obj['allowed_providers'] = ApiClient.convertToType(data['allowed_providers'], ['String']);
            }
            if (data.hasOwnProperty('auth_policy')) {
                obj['auth_policy'] = ApiClient.convertToType(data['auth_policy'], Object);
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('email_regex')) {
                obj['email_regex'] = ApiClient.convertToType(data['email_regex'], 'String');
            }
            if (data.hasOwnProperty('signup_policy')) {
                obj['signup_policy'] = DaoSignupPolicy.constructFromObject(data['signup_policy']);
            }
        }
        return obj;
    }


}

/**
 * Allowed providers (use direct for direct sign-in)
 * @member {Array.<String>} allowed_providers
 */
DaoPolicy.prototype['allowed_providers'] = undefined;

/**
 * Authentication policy
 * @member {Object} auth_policy
 */
DaoPolicy.prototype['auth_policy'] = undefined;

/**
 * comment
 * @member {String} comment
 */
DaoPolicy.prototype['comment'] = undefined;

/**
 * Regular expression for email addresses
 * @member {String} email_regex
 */
DaoPolicy.prototype['email_regex'] = undefined;

/**
 * @member {module:model/DaoSignupPolicy} signup_policy
 */
DaoPolicy.prototype['signup_policy'] = undefined;






export default DaoPolicy;

