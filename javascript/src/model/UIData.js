/**
 * Spyderbat API UI & Public APIs
 * Restful APIs for use by UI & customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UIData model module.
 * @module model/UIData
 * @version 1.0.0
 */
class UIData {
    /**
     * Constructs a new <code>UIData</code>.
     * @alias module:model/UIData
     */
    constructor() { 
        
        UIData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UIData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UIData} obj Optional instance to populate.
     * @return {module:model/UIData} The populated <code>UIData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UIData();

            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], {'String': Object});
            }
            if (data.hasOwnProperty('data_key')) {
                obj['data_key'] = ApiClient.convertToType(data['data_key'], 'String');
            }
            if (data.hasOwnProperty('last_used')) {
                obj['last_used'] = ApiClient.convertToType(data['last_used'], 'Date');
            }
            if (data.hasOwnProperty('org_uid')) {
                obj['org_uid'] = ApiClient.convertToType(data['org_uid'], 'String');
            }
            if (data.hasOwnProperty('owner_uid')) {
                obj['owner_uid'] = ApiClient.convertToType(data['owner_uid'], 'String');
            }
            if (data.hasOwnProperty('source_uid')) {
                obj['source_uid'] = ApiClient.convertToType(data['source_uid'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('valid_from')) {
                obj['valid_from'] = ApiClient.convertToType(data['valid_from'], 'Date');
            }
            if (data.hasOwnProperty('valid_to')) {
                obj['valid_to'] = ApiClient.convertToType(data['valid_to'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * UI supplied JSON object
 * @member {Object.<String, Object>} data
 */
UIData.prototype['data'] = undefined;

/**
 * Key for the data
 * @member {String} data_key
 */
UIData.prototype['data_key'] = undefined;

/**
 * The time of las use of the key; only updated every 5 minutes
 * @member {Date} last_used
 */
UIData.prototype['last_used'] = undefined;

/**
 * Org UID
 * @member {String} org_uid
 */
UIData.prototype['org_uid'] = undefined;

/**
 * Owner UID
 * @member {String} owner_uid
 */
UIData.prototype['owner_uid'] = undefined;

/**
 * Source UID
 * @member {String} source_uid
 */
UIData.prototype['source_uid'] = undefined;

/**
 * User supplied tags
 * @member {Array.<String>} tags
 */
UIData.prototype['tags'] = undefined;

/**
 * UID for the UIData
 * @member {String} uid
 */
UIData.prototype['uid'] = undefined;

/**
 * Valid from is the creation date or first date when the API key became valid
 * @member {Date} valid_from
 */
UIData.prototype['valid_from'] = undefined;

/**
 * Valid to is the expiration date or the last date this API key will be valid
 * @member {Date} valid_to
 */
UIData.prototype['valid_to'] = undefined;






export default UIData;

