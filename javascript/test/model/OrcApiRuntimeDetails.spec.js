/**
 * Spyderbat API UI & Public APIs
 * Restful APIs for use by UI & customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@spyderbat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Sbapi);
  }
}(this, function(expect, Sbapi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Sbapi.OrcApiRuntimeDetails();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrcApiRuntimeDetails', function() {
    it('should create an instance of OrcApiRuntimeDetails', function() {
      // uncomment below and update the code to test OrcApiRuntimeDetails
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be.a(Sbapi.OrcApiRuntimeDetails);
    });

    it('should have the property agentArch (base name: "agent_arch")', function() {
      // uncomment below and update the code to test the property agentArch
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property agentVersion (base name: "agent_version")', function() {
      // uncomment below and update the code to test the property agentVersion
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property bootTime (base name: "boot_time")', function() {
      // uncomment below and update the code to test the property bootTime
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property cloudImageId (base name: "cloud_image_id")', function() {
      // uncomment below and update the code to test the property cloudImageId
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property cloudInstanceId (base name: "cloud_instance_id")', function() {
      // uncomment below and update the code to test the property cloudInstanceId
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property cloudRegion (base name: "cloud_region")', function() {
      // uncomment below and update the code to test the property cloudRegion
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property cloudTags (base name: "cloud_tags")', function() {
      // uncomment below and update the code to test the property cloudTags
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property cloudType (base name: "cloud_type")', function() {
      // uncomment below and update the code to test the property cloudType
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property cpuCores (base name: "cpu_cores")', function() {
      // uncomment below and update the code to test the property cpuCores
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property cpuMake (base name: "cpu_make")', function() {
      // uncomment below and update the code to test the property cpuMake
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property cpuModel (base name: "cpu_model")', function() {
      // uncomment below and update the code to test the property cpuModel
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property hostname (base name: "hostname")', function() {
      // uncomment below and update the code to test the property hostname
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property ipAddresses (base name: "ip_addresses")', function() {
      // uncomment below and update the code to test the property ipAddresses
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property macAddresses (base name: "mac_addresses")', function() {
      // uncomment below and update the code to test the property macAddresses
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property osName (base name: "os_name")', function() {
      // uncomment below and update the code to test the property osName
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property osPrettyName (base name: "os_pretty_name")', function() {
      // uncomment below and update the code to test the property osPrettyName
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property requestIp (base name: "request_ip")', function() {
      // uncomment below and update the code to test the property requestIp
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property srcUid (base name: "src_uid")', function() {
      // uncomment below and update the code to test the property srcUid
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

    it('should have the property uname (base name: "uname")', function() {
      // uncomment below and update the code to test the property uname
      //var instance = new Sbapi.OrcApiRuntimeDetails();
      //expect(instance).to.be();
    });

  });

}));
