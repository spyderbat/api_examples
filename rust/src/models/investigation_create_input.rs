/*
 * Spyderbat API UI & Public APIs
 *
 * Restful APIs for use by UI & customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@spyderbat.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct InvestigationCreateInput {
    /// UID of user who created the investigation
    #[serde(rename = "created_by", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<String>,
    /// JSON Object associated with the investigation
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<::std::collections::HashMap<String, serde_json::Value>>,
    /// UID of the user who last modified the investigation
    #[serde(rename = "modified_by", skip_serializing_if = "Option::is_none")]
    pub modified_by: Option<String>,
    /// Date the investigation was last modified
    #[serde(rename = "modified_on", skip_serializing_if = "Option::is_none")]
    pub modified_on: Option<String>,
    /// Name of the investigation
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Resource name used for RBAC
    #[serde(rename = "resource_name", skip_serializing_if = "Option::is_none")]
    pub resource_name: Option<String>,
    #[serde(rename = "resource_policy", skip_serializing_if = "Option::is_none")]
    pub resource_policy: Option<Box<crate::models::ResourcePolicy>>,
    /// User supplied tags
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    /// Valid from date, the first date this object was valid
    #[serde(rename = "valid_from", skip_serializing_if = "Option::is_none")]
    pub valid_from: Option<String>,
    /// Valid to date, the date this object is valid to
    #[serde(rename = "valid_to", skip_serializing_if = "Option::is_none")]
    pub valid_to: Option<String>,
    /// Version of the investigation
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<i32>,
}

impl InvestigationCreateInput {
    pub fn new() -> InvestigationCreateInput {
        InvestigationCreateInput {
            created_by: None,
            data: None,
            modified_by: None,
            modified_on: None,
            name: None,
            resource_name: None,
            resource_policy: None,
            tags: None,
            valid_from: None,
            valid_to: None,
            version: None,
        }
    }
}


