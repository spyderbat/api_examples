/*
 * Spyderbat API UI & Public APIs
 *
 * Restful APIs for use by UI & customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@spyderbat.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SrcCreateInput {
    /// User supplied description of the source
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// User supplied name of the source
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Description of the runtime of the source
    #[serde(rename = "runtime_description", skip_serializing_if = "Option::is_none")]
    pub runtime_description: Option<String>,
    #[serde(rename = "runtime_details", skip_serializing_if = "Option::is_none")]
    pub runtime_details: Option<Box<crate::models::OrcApiRuntimeDetails>>,
    /// User supplied tags
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    /// Type of source
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
    /// The UID of the source
    #[serde(rename = "uid", skip_serializing_if = "Option::is_none")]
    pub uid: Option<String>,
}

impl SrcCreateInput {
    pub fn new() -> SrcCreateInput {
        SrcCreateInput {
            description: None,
            name: None,
            runtime_description: None,
            runtime_details: None,
            tags: None,
            _type: None,
            uid: None,
        }
    }
}


