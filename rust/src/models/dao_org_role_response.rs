/*
 * Spyderbat API UI & Public APIs
 *
 * Restful APIs for use by UI & customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@spyderbat.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DaoOrgRoleResponse {
    /// The organization name the user has the assigned role on
    #[serde(rename = "org_name", skip_serializing_if = "Option::is_none")]
    pub org_name: Option<String>,
    /// The organization UID the user has the assigned role on
    #[serde(rename = "org_uid", skip_serializing_if = "Option::is_none")]
    pub org_uid: Option<String>,
    /// The role the user is assigned
    #[serde(rename = "role_uid", skip_serializing_if = "Option::is_none")]
    pub role_uid: Option<String>,
    /// The email address associated with the user
    #[serde(rename = "user_email", skip_serializing_if = "Option::is_none")]
    pub user_email: Option<String>,
    /// The user uid for the user
    #[serde(rename = "user_uid", skip_serializing_if = "Option::is_none")]
    pub user_uid: Option<String>,
}

impl DaoOrgRoleResponse {
    pub fn new() -> DaoOrgRoleResponse {
        DaoOrgRoleResponse {
            org_name: None,
            org_uid: None,
            role_uid: None,
            user_email: None,
            user_uid: None,
        }
    }
}


