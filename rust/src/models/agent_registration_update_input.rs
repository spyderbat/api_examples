/*
 * Spyderbat API UI & Public APIs
 *
 * Restful APIs for use by UI & customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@spyderbat.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AgentRegistrationUpdateInput {
    #[serde(rename = "config", skip_serializing_if = "Option::is_none")]
    pub config: Option<Box<crate::models::DaoAgentConfig>>,
    /// The user UID of the user who created the agent registration
    #[serde(rename = "created_by", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<String>,
    /// Description of the agent registration
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Name of the agent registration
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Resource name used for RBAC
    #[serde(rename = "resource_name", skip_serializing_if = "Option::is_none")]
    pub resource_name: Option<String>,
    /// Valid from date, the first date this object was valid
    #[serde(rename = "valid_from", skip_serializing_if = "Option::is_none")]
    pub valid_from: Option<String>,
    /// Valid to date, the date this object is valid to
    #[serde(rename = "valid_to", skip_serializing_if = "Option::is_none")]
    pub valid_to: Option<String>,
}

impl AgentRegistrationUpdateInput {
    pub fn new() -> AgentRegistrationUpdateInput {
        AgentRegistrationUpdateInput {
            config: None,
            created_by: None,
            description: None,
            name: None,
            resource_name: None,
            valid_from: None,
            valid_to: None,
        }
    }
}


