/*
 * Spyderbat API UI & Public APIs
 *
 * Restful APIs for use by UI & customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@spyderbat.com
 * Generated by: https://openapi-generator.tech
 */

/// ResourcePolicy : Resource policy for RBAC



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ResourcePolicy {
    /// Name of the resource policy
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// List of statements to be examined by the resource policy
    #[serde(rename = "statements", skip_serializing_if = "Option::is_none")]
    pub statements: Option<Vec<crate::models::RbacStatement>>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
}

impl ResourcePolicy {
    /// Resource policy for RBAC
    pub fn new() -> ResourcePolicy {
        ResourcePolicy {
            name: None,
            statements: None,
            version: None,
        }
    }
}


