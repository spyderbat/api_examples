/*
 * Spyderbat API UI & Public APIs
 *
 * Restful APIs for use by UI & customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@spyderbat.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RstoreCausalQuery {
    /// Causal tree matching rules for peer causal records
    #[serde(rename = "peer", skip_serializing_if = "Option::is_none")]
    pub peer: Option<Vec<serde_json::Value>>,
    /// Causal tree matching rules for post causal records
    #[serde(rename = "post", skip_serializing_if = "Option::is_none")]
    pub post: Option<Vec<serde_json::Value>>,
    /// Causal tree matching rules for pre causal records
    #[serde(rename = "pre", skip_serializing_if = "Option::is_none")]
    pub pre: Option<Vec<serde_json::Value>>,
}

impl RstoreCausalQuery {
    pub fn new() -> RstoreCausalQuery {
        RstoreCausalQuery {
            peer: None,
            post: None,
            pre: None,
        }
    }
}


