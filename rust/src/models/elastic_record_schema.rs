/*
 * Spyderbat API UI & Public APIs
 *
 * Restful APIs for use by UI & customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@spyderbat.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ElasticRecordSchema {
    #[serde(rename = "dynamic", skip_serializing_if = "Option::is_none")]
    pub dynamic: Option<bool>,
    /// List of properties and how they are stored
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<::std::collections::HashMap<String, crate::models::ElasticRecordField>>,
}

impl ElasticRecordSchema {
    pub fn new() -> ElasticRecordSchema {
        ElasticRecordSchema {
            dynamic: None,
            properties: None,
        }
    }
}


